version: "3.9" # optional since v1.27.0
services:

  account-service:
    build:
      context: .
      dockerfile: backend/client_services/account_service/dev.Dockerfile
    volumes:
      - ./backend/client_services/account_service/app:/app
      - ./backend/schemas:/schemas
      - ./backend/libs:/libs
    ports:
      - "8000:8080"
    environment:
      - JWT_SECRET=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - TOKEN_URL=http://localhost:8000/token
      - MONGO_DATABASE_URL=mongodb://mongo:27017/
      - ENV=DEV
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - REDIS_URL=redis://redis
    networks:
      - vpcbr

  recording-upload-service:
    build:
      context: .
      dockerfile: backend/client_services/recording_upload_service/dev.Dockerfile
    volumes:
      - ./backend/client_services/recording_upload_service/app:/app
      - ./backend/schemas:/schemas
      - ./backend/libs:/libs
    ports:
      - "8001:8080"
    environment:
      - JWT_SECRET=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - TOKEN_URL=http://localhost:8000/token
      - MONGO_DATABASE_URL=mongodb://mongo:27017/
      - ENV=DEV
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - REDIS_URL=redis://redis
    networks:
      - vpcbr

  dev-dashboard:
    build:
      context: ./frontend/dev_dashboard
      dockerfile: dev.Dockerfile
    volumes:
      - ./frontend/dev_dashboard/src:/app/src
    ports:
      - "3000:3000"
    environment:
      - secret=secret
      - jwt_secret=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - token_url=http://localhost:8080/token
      - mongo_database_url=mongodb://mongo:27017/
      - ENV=DEV
      - REDIS_URL=redis://redis
      - API_KEY=test
      - PYTHONUNBUFFERED=1
    networks:
     - vpcbr

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
     - vpcbr
  redis:
    image: redis:latest
    networks:
     - vpcbr
    ports:
      - "6379:6379"

  minio:
    image: 'minio/minio:latest'
    volumes:
      - ./volumes/minio_data:/data
    ports:
      - '9000:9000'
      - '9090:9090'
    environment:
      MINIO_ROOT_USER: 'root'
      MINIO_ROOT_PASSWORD: 'password'
      MINIO_ACCESS_KEY: 'root'
      MINIO_SECRET_KEY: 'password'
    command: minio server /data/minio --console-address ":9090"
    networks:
      vpcbr:
        ipv4_address: 10.5.10.6


networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.10/16
         gateway: 10.5.10.1
        #  aux_addresses:
        #   minio: 10.5.0.10
